on:
  push:
    branches:
      - main

name: release
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - name: Checkout code
        uses: actions/checkout@v2
      - name:  Install deps
        run:   |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get install -y jq
            export PATH=$PATH:$(go env GOPATH)/bin
            wget https://github.com/laraboot-io/gotom/releases/download/v0.1.1/gotom_v0.0.0-SNAPSHOT-07dbf97_linux_386.tar.gz -O - | tar -xz
            chmod +x ./gotom
            sudo mv gotom /usr/bin/gotom
            gotom version
            (curl -sSL "https://github.com/buildpacks/pack/releases/download/v0.17.0/pack-v0.17.0-linux.tgz" | sudo tar -C /usr/local/bin/ --no-same-owner -xzv pack)
          elif [ "$RUNNER_OS" == "Windows" ]; then
            choco install jq
          else
            echo "$RUNNER_OS not supported"
            exit 1
          fi
      - name: Make binaries
        env:
          GOOS: linux
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          sudo chmod +x ./scripts/package.sh
          ./scripts/package.sh
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: AWS Release
        env:
          STAGE: ${{ fromJSON('["prod", "dev"]')[github.ref != 'refs/heads/master'] }}
          RELEASE: ${{ fromJSON('["no", "yes"]')[github.ref != 'refs/heads/master'] }}
        run: |
          sudo chmod -R +x ./scripts
          ./scripts/release-buildpacks-aws.sh
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: CR Release
        env:
          IMAGE_TAG: ${{ fromJSON('["latest", "dev"]')[github.ref != 'refs/heads/master'] }}
          RELEASE: ${{ fromJSON('["no", "yes"]')[github.ref != 'refs/heads/master'] }}
          ECR_REGISTRY: ghcr.io/laraboot-io
        run: |
          ./scripts/release-buildpacks-cr.sh